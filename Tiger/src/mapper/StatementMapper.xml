<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.stem.dao.StatementMapper" >
  <resultMap id="BaseResultMap" type="com.stem.entity.Statement" >
    <id column="IDCard" property="idcard" jdbcType="VARCHAR" />
    <id column="CheckDate" property="checkdate" jdbcType="DATE" />
    <id column="FundName" property="fundname" jdbcType="VARCHAR" />
    <result column="CustomerName" property="customername" jdbcType="VARCHAR" />
    <result column="Phone" property="phone" jdbcType="VARCHAR" />
    <result column="CustomerID" property="customerid" jdbcType="VARCHAR" />
    <result column="FundType" property="fundtype" jdbcType="VARCHAR" />
    <result column="NetValue" property="netvalue" jdbcType="DECIMAL" />
    <result column="PurchaseAmount" property="purchaseamount" jdbcType="DECIMAL" />
    <result column="TotalPurchaseAmount" property="totalpurchaseamount" jdbcType="DECIMAL" />
    <result column="ExchangeRate" property="exchangerate" jdbcType="DECIMAL" />
    <result column="AddValueOfAssert" property="addvalueofassert" jdbcType="DECIMAL" />
    <result column="PurchaseShares" property="purchaseshares" jdbcType="INTEGER" />
    <result column="CurrentBalance" property="currentbalance" jdbcType="DECIMAL" />
    <result column="RedemptionShares" property="redemptionshares" jdbcType="INTEGER" />
    <result column="RedemptionAmount" property="redemptionamount" jdbcType="DECIMAL" />
    <result column="TotalRedemptionAmount" property="totalredemptionamount" jdbcType="DECIMAL" />
    <result column="TotalShares" property="totalshares" jdbcType="INTEGER" />
    <result column="TotalAmount" property="totalamount" jdbcType="DECIMAL" />
    <result column="TotalBalance" property="totalbalance" jdbcType="DECIMAL" />
    <result column="TotalReturn" property="totalreturn" jdbcType="DECIMAL" />
    <result column="TotalRate" property="totalrate" jdbcType="DECIMAL" />
    <result column="CurrentReturn" property="currentreturn" jdbcType="DECIMAL" />
    <result column="CurrentRate" property="currentrate" jdbcType="DECIMAL" />
    <result column="CurrentDividend" property="currentdividend" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    IDCard, CheckDate, FundName, CustomerName, Phone, CustomerID, FundType, NetValue, 
    PurchaseAmount, TotalPurchaseAmount, ExchangeRate, AddValueOfAssert, PurchaseShares, 
    CurrentBalance, RedemptionShares, RedemptionAmount, TotalRedemptionAmount, TotalShares, 
    TotalAmount, TotalBalance, TotalReturn, TotalRate, CurrentReturn, CurrentRate, CurrentDividend
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.stem.entity.StatementExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from statement
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.stem.entity.StatementKey" >
    select 
    <include refid="Base_Column_List" />
    from statement
    where IDCard = #{idcard,jdbcType=VARCHAR}
      and CheckDate = #{checkdate,jdbcType=DATE}
      and FundName = #{fundname,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.stem.entity.StatementKey" >
    delete from statement
    where IDCard = #{idcard,jdbcType=VARCHAR}
      and CheckDate = #{checkdate,jdbcType=DATE}
      and FundName = #{fundname,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.stem.entity.StatementExample" >
    delete from statement
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.stem.entity.Statement" >
    insert into statement (IDCard, CheckDate, FundName, 
      CustomerName, Phone, CustomerID, 
      FundType, NetValue, PurchaseAmount, 
      TotalPurchaseAmount, ExchangeRate, AddValueOfAssert, 
      PurchaseShares, CurrentBalance, RedemptionShares, 
      RedemptionAmount, TotalRedemptionAmount, 
      TotalShares, TotalAmount, TotalBalance, 
      TotalReturn, TotalRate, CurrentReturn, 
      CurrentRate, CurrentDividend)
    values (#{idcard,jdbcType=VARCHAR}, #{checkdate,jdbcType=DATE}, #{fundname,jdbcType=VARCHAR}, 
      #{customername,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{customerid,jdbcType=VARCHAR}, 
      #{fundtype,jdbcType=VARCHAR}, #{netvalue,jdbcType=DECIMAL}, #{purchaseamount,jdbcType=DECIMAL}, 
      #{totalpurchaseamount,jdbcType=DECIMAL}, #{exchangerate,jdbcType=DECIMAL}, #{addvalueofassert,jdbcType=DECIMAL}, 
      #{purchaseshares,jdbcType=INTEGER}, #{currentbalance,jdbcType=DECIMAL}, #{redemptionshares,jdbcType=INTEGER}, 
      #{redemptionamount,jdbcType=DECIMAL}, #{totalredemptionamount,jdbcType=DECIMAL}, 
      #{totalshares,jdbcType=INTEGER}, #{totalamount,jdbcType=DECIMAL}, #{totalbalance,jdbcType=DECIMAL}, 
      #{totalreturn,jdbcType=DECIMAL}, #{totalrate,jdbcType=DECIMAL}, #{currentreturn,jdbcType=DECIMAL}, 
      #{currentrate,jdbcType=DECIMAL}, #{currentdividend,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.stem.entity.Statement" >
    insert into statement
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="idcard != null" >
        IDCard,
      </if>
      <if test="checkdate != null" >
        CheckDate,
      </if>
      <if test="fundname != null" >
        FundName,
      </if>
      <if test="customername != null" >
        CustomerName,
      </if>
      <if test="phone != null" >
        Phone,
      </if>
      <if test="customerid != null" >
        CustomerID,
      </if>
      <if test="fundtype != null" >
        FundType,
      </if>
      <if test="netvalue != null" >
        NetValue,
      </if>
      <if test="purchaseamount != null" >
        PurchaseAmount,
      </if>
      <if test="totalpurchaseamount != null" >
        TotalPurchaseAmount,
      </if>
      <if test="exchangerate != null" >
        ExchangeRate,
      </if>
      <if test="addvalueofassert != null" >
        AddValueOfAssert,
      </if>
      <if test="purchaseshares != null" >
        PurchaseShares,
      </if>
      <if test="currentbalance != null" >
        CurrentBalance,
      </if>
      <if test="redemptionshares != null" >
        RedemptionShares,
      </if>
      <if test="redemptionamount != null" >
        RedemptionAmount,
      </if>
      <if test="totalredemptionamount != null" >
        TotalRedemptionAmount,
      </if>
      <if test="totalshares != null" >
        TotalShares,
      </if>
      <if test="totalamount != null" >
        TotalAmount,
      </if>
      <if test="totalbalance != null" >
        TotalBalance,
      </if>
      <if test="totalreturn != null" >
        TotalReturn,
      </if>
      <if test="totalrate != null" >
        TotalRate,
      </if>
      <if test="currentreturn != null" >
        CurrentReturn,
      </if>
      <if test="currentrate != null" >
        CurrentRate,
      </if>
      <if test="currentdividend != null" >
        CurrentDividend,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="idcard != null" >
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="checkdate != null" >
        #{checkdate,jdbcType=DATE},
      </if>
      <if test="fundname != null" >
        #{fundname,jdbcType=VARCHAR},
      </if>
      <if test="customername != null" >
        #{customername,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="customerid != null" >
        #{customerid,jdbcType=VARCHAR},
      </if>
      <if test="fundtype != null" >
        #{fundtype,jdbcType=VARCHAR},
      </if>
      <if test="netvalue != null" >
        #{netvalue,jdbcType=DECIMAL},
      </if>
      <if test="purchaseamount != null" >
        #{purchaseamount,jdbcType=DECIMAL},
      </if>
      <if test="totalpurchaseamount != null" >
        #{totalpurchaseamount,jdbcType=DECIMAL},
      </if>
      <if test="exchangerate != null" >
        #{exchangerate,jdbcType=DECIMAL},
      </if>
      <if test="addvalueofassert != null" >
        #{addvalueofassert,jdbcType=DECIMAL},
      </if>
      <if test="purchaseshares != null" >
        #{purchaseshares,jdbcType=INTEGER},
      </if>
      <if test="currentbalance != null" >
        #{currentbalance,jdbcType=DECIMAL},
      </if>
      <if test="redemptionshares != null" >
        #{redemptionshares,jdbcType=INTEGER},
      </if>
      <if test="redemptionamount != null" >
        #{redemptionamount,jdbcType=DECIMAL},
      </if>
      <if test="totalredemptionamount != null" >
        #{totalredemptionamount,jdbcType=DECIMAL},
      </if>
      <if test="totalshares != null" >
        #{totalshares,jdbcType=INTEGER},
      </if>
      <if test="totalamount != null" >
        #{totalamount,jdbcType=DECIMAL},
      </if>
      <if test="totalbalance != null" >
        #{totalbalance,jdbcType=DECIMAL},
      </if>
      <if test="totalreturn != null" >
        #{totalreturn,jdbcType=DECIMAL},
      </if>
      <if test="totalrate != null" >
        #{totalrate,jdbcType=DECIMAL},
      </if>
      <if test="currentreturn != null" >
        #{currentreturn,jdbcType=DECIMAL},
      </if>
      <if test="currentrate != null" >
        #{currentrate,jdbcType=DECIMAL},
      </if>
      <if test="currentdividend != null" >
        #{currentdividend,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.stem.entity.StatementExample" resultType="java.lang.Integer" >
    select count(*) from statement
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update statement
    <set >
      <if test="record.idcard != null" >
        IDCard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.checkdate != null" >
        CheckDate = #{record.checkdate,jdbcType=DATE},
      </if>
      <if test="record.fundname != null" >
        FundName = #{record.fundname,jdbcType=VARCHAR},
      </if>
      <if test="record.customername != null" >
        CustomerName = #{record.customername,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        Phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.customerid != null" >
        CustomerID = #{record.customerid,jdbcType=VARCHAR},
      </if>
      <if test="record.fundtype != null" >
        FundType = #{record.fundtype,jdbcType=VARCHAR},
      </if>
      <if test="record.netvalue != null" >
        NetValue = #{record.netvalue,jdbcType=DECIMAL},
      </if>
      <if test="record.purchaseamount != null" >
        PurchaseAmount = #{record.purchaseamount,jdbcType=DECIMAL},
      </if>
      <if test="record.totalpurchaseamount != null" >
        TotalPurchaseAmount = #{record.totalpurchaseamount,jdbcType=DECIMAL},
      </if>
      <if test="record.exchangerate != null" >
        ExchangeRate = #{record.exchangerate,jdbcType=DECIMAL},
      </if>
      <if test="record.addvalueofassert != null" >
        AddValueOfAssert = #{record.addvalueofassert,jdbcType=DECIMAL},
      </if>
      <if test="record.purchaseshares != null" >
        PurchaseShares = #{record.purchaseshares,jdbcType=INTEGER},
      </if>
      <if test="record.currentbalance != null" >
        CurrentBalance = #{record.currentbalance,jdbcType=DECIMAL},
      </if>
      <if test="record.redemptionshares != null" >
        RedemptionShares = #{record.redemptionshares,jdbcType=INTEGER},
      </if>
      <if test="record.redemptionamount != null" >
        RedemptionAmount = #{record.redemptionamount,jdbcType=DECIMAL},
      </if>
      <if test="record.totalredemptionamount != null" >
        TotalRedemptionAmount = #{record.totalredemptionamount,jdbcType=DECIMAL},
      </if>
      <if test="record.totalshares != null" >
        TotalShares = #{record.totalshares,jdbcType=INTEGER},
      </if>
      <if test="record.totalamount != null" >
        TotalAmount = #{record.totalamount,jdbcType=DECIMAL},
      </if>
      <if test="record.totalbalance != null" >
        TotalBalance = #{record.totalbalance,jdbcType=DECIMAL},
      </if>
      <if test="record.totalreturn != null" >
        TotalReturn = #{record.totalreturn,jdbcType=DECIMAL},
      </if>
      <if test="record.totalrate != null" >
        TotalRate = #{record.totalrate,jdbcType=DECIMAL},
      </if>
      <if test="record.currentreturn != null" >
        CurrentReturn = #{record.currentreturn,jdbcType=DECIMAL},
      </if>
      <if test="record.currentrate != null" >
        CurrentRate = #{record.currentrate,jdbcType=DECIMAL},
      </if>
      <if test="record.currentdividend != null" >
        CurrentDividend = #{record.currentdividend,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update statement
    set IDCard = #{record.idcard,jdbcType=VARCHAR},
      CheckDate = #{record.checkdate,jdbcType=DATE},
      FundName = #{record.fundname,jdbcType=VARCHAR},
      CustomerName = #{record.customername,jdbcType=VARCHAR},
      Phone = #{record.phone,jdbcType=VARCHAR},
      CustomerID = #{record.customerid,jdbcType=VARCHAR},
      FundType = #{record.fundtype,jdbcType=VARCHAR},
      NetValue = #{record.netvalue,jdbcType=DECIMAL},
      PurchaseAmount = #{record.purchaseamount,jdbcType=DECIMAL},
      TotalPurchaseAmount = #{record.totalpurchaseamount,jdbcType=DECIMAL},
      ExchangeRate = #{record.exchangerate,jdbcType=DECIMAL},
      AddValueOfAssert = #{record.addvalueofassert,jdbcType=DECIMAL},
      PurchaseShares = #{record.purchaseshares,jdbcType=INTEGER},
      CurrentBalance = #{record.currentbalance,jdbcType=DECIMAL},
      RedemptionShares = #{record.redemptionshares,jdbcType=INTEGER},
      RedemptionAmount = #{record.redemptionamount,jdbcType=DECIMAL},
      TotalRedemptionAmount = #{record.totalredemptionamount,jdbcType=DECIMAL},
      TotalShares = #{record.totalshares,jdbcType=INTEGER},
      TotalAmount = #{record.totalamount,jdbcType=DECIMAL},
      TotalBalance = #{record.totalbalance,jdbcType=DECIMAL},
      TotalReturn = #{record.totalreturn,jdbcType=DECIMAL},
      TotalRate = #{record.totalrate,jdbcType=DECIMAL},
      CurrentReturn = #{record.currentreturn,jdbcType=DECIMAL},
      CurrentRate = #{record.currentrate,jdbcType=DECIMAL},
      CurrentDividend = #{record.currentdividend,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.stem.entity.Statement" >
    update statement
    <set >
      <if test="customername != null" >
        CustomerName = #{customername,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        Phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="customerid != null" >
        CustomerID = #{customerid,jdbcType=VARCHAR},
      </if>
      <if test="fundtype != null" >
        FundType = #{fundtype,jdbcType=VARCHAR},
      </if>
      <if test="netvalue != null" >
        NetValue = #{netvalue,jdbcType=DECIMAL},
      </if>
      <if test="purchaseamount != null" >
        PurchaseAmount = #{purchaseamount,jdbcType=DECIMAL},
      </if>
      <if test="totalpurchaseamount != null" >
        TotalPurchaseAmount = #{totalpurchaseamount,jdbcType=DECIMAL},
      </if>
      <if test="exchangerate != null" >
        ExchangeRate = #{exchangerate,jdbcType=DECIMAL},
      </if>
      <if test="addvalueofassert != null" >
        AddValueOfAssert = #{addvalueofassert,jdbcType=DECIMAL},
      </if>
      <if test="purchaseshares != null" >
        PurchaseShares = #{purchaseshares,jdbcType=INTEGER},
      </if>
      <if test="currentbalance != null" >
        CurrentBalance = #{currentbalance,jdbcType=DECIMAL},
      </if>
      <if test="redemptionshares != null" >
        RedemptionShares = #{redemptionshares,jdbcType=INTEGER},
      </if>
      <if test="redemptionamount != null" >
        RedemptionAmount = #{redemptionamount,jdbcType=DECIMAL},
      </if>
      <if test="totalredemptionamount != null" >
        TotalRedemptionAmount = #{totalredemptionamount,jdbcType=DECIMAL},
      </if>
      <if test="totalshares != null" >
        TotalShares = #{totalshares,jdbcType=INTEGER},
      </if>
      <if test="totalamount != null" >
        TotalAmount = #{totalamount,jdbcType=DECIMAL},
      </if>
      <if test="totalbalance != null" >
        TotalBalance = #{totalbalance,jdbcType=DECIMAL},
      </if>
      <if test="totalreturn != null" >
        TotalReturn = #{totalreturn,jdbcType=DECIMAL},
      </if>
      <if test="totalrate != null" >
        TotalRate = #{totalrate,jdbcType=DECIMAL},
      </if>
      <if test="currentreturn != null" >
        CurrentReturn = #{currentreturn,jdbcType=DECIMAL},
      </if>
      <if test="currentrate != null" >
        CurrentRate = #{currentrate,jdbcType=DECIMAL},
      </if>
      <if test="currentdividend != null" >
        CurrentDividend = #{currentdividend,jdbcType=DECIMAL},
      </if>
    </set>
    where IDCard = #{idcard,jdbcType=VARCHAR}
      and CheckDate = #{checkdate,jdbcType=DATE}
      and FundName = #{fundname,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.stem.entity.Statement" >
    update statement
    set CustomerName = #{customername,jdbcType=VARCHAR},
      Phone = #{phone,jdbcType=VARCHAR},
      CustomerID = #{customerid,jdbcType=VARCHAR},
      FundType = #{fundtype,jdbcType=VARCHAR},
      NetValue = #{netvalue,jdbcType=DECIMAL},
      PurchaseAmount = #{purchaseamount,jdbcType=DECIMAL},
      TotalPurchaseAmount = #{totalpurchaseamount,jdbcType=DECIMAL},
      ExchangeRate = #{exchangerate,jdbcType=DECIMAL},
      AddValueOfAssert = #{addvalueofassert,jdbcType=DECIMAL},
      PurchaseShares = #{purchaseshares,jdbcType=INTEGER},
      CurrentBalance = #{currentbalance,jdbcType=DECIMAL},
      RedemptionShares = #{redemptionshares,jdbcType=INTEGER},
      RedemptionAmount = #{redemptionamount,jdbcType=DECIMAL},
      TotalRedemptionAmount = #{totalredemptionamount,jdbcType=DECIMAL},
      TotalShares = #{totalshares,jdbcType=INTEGER},
      TotalAmount = #{totalamount,jdbcType=DECIMAL},
      TotalBalance = #{totalbalance,jdbcType=DECIMAL},
      TotalReturn = #{totalreturn,jdbcType=DECIMAL},
      TotalRate = #{totalrate,jdbcType=DECIMAL},
      CurrentReturn = #{currentreturn,jdbcType=DECIMAL},
      CurrentRate = #{currentrate,jdbcType=DECIMAL},
      CurrentDividend = #{currentdividend,jdbcType=DECIMAL}
    where IDCard = #{idcard,jdbcType=VARCHAR}
      and CheckDate = #{checkdate,jdbcType=DATE}
      and FundName = #{fundname,jdbcType=VARCHAR}
  </update>
</mapper>