<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.stem.dao.UserApproveMapper" >
  <resultMap id="BaseResultMap" type="com.stem.entity.UserApprove" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="EMAIL" property="email" jdbcType="VARCHAR" />
    <result column="SEX" property="sex" jdbcType="CHAR" />
    <result column="ID_CARD" property="idCard" jdbcType="VARCHAR" />
    <result column="PARTNER_NAME" property="partnerName" jdbcType="VARCHAR" />
    <result column="PARTNER_TEL" property="partnerTel" jdbcType="VARCHAR" />
    <result column="PARTNER_ADDRESS" property="partnerAddress" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, USER_NAME, NAME, EMAIL, SEX, ID_CARD, PARTNER_NAME, PARTNER_TEL, PARTNER_ADDRESS, 
    CREATE_TIME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.stem.entity.UserApproveExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from userapprove
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from userapprove
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from userapprove
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.stem.entity.UserApproveExample" >
    delete from userapprove
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.stem.entity.UserApprove" >
    insert into userapprove (ID, USER_NAME, NAME, 
      EMAIL, SEX, ID_CARD, PARTNER_NAME, 
      PARTNER_TEL, PARTNER_ADDRESS, CREATE_TIME
      )
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR}, #{idCard,jdbcType=VARCHAR}, #{partnerName,jdbcType=VARCHAR}, 
      #{partnerTel,jdbcType=VARCHAR}, #{partnerAddress,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.stem.entity.UserApprove" >
    insert into userapprove
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="userName != null" >
        USER_NAME,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="email != null" >
        EMAIL,
      </if>
      <if test="sex != null" >
        SEX,
      </if>
      <if test="idCard != null" >
        ID_CARD,
      </if>
      <if test="partnerName != null" >
        PARTNER_NAME,
      </if>
      <if test="partnerTel != null" >
        PARTNER_TEL,
      </if>
      <if test="partnerAddress != null" >
        PARTNER_ADDRESS,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=CHAR},
      </if>
      <if test="idCard != null" >
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="partnerName != null" >
        #{partnerName,jdbcType=VARCHAR},
      </if>
      <if test="partnerTel != null" >
        #{partnerTel,jdbcType=VARCHAR},
      </if>
      <if test="partnerAddress != null" >
        #{partnerAddress,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.stem.entity.UserApproveExample" resultType="java.lang.Integer" >
    select count(*) from userapprove
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update userapprove
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null" >
        USER_NAME = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        SEX = #{record.sex,jdbcType=CHAR},
      </if>
      <if test="record.idCard != null" >
        ID_CARD = #{record.idCard,jdbcType=VARCHAR},
      </if>
      <if test="record.partnerName != null" >
        PARTNER_NAME = #{record.partnerName,jdbcType=VARCHAR},
      </if>
      <if test="record.partnerTel != null" >
        PARTNER_TEL = #{record.partnerTel,jdbcType=VARCHAR},
      </if>
      <if test="record.partnerAddress != null" >
        PARTNER_ADDRESS = #{record.partnerAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update userapprove
    set ID = #{record.id,jdbcType=INTEGER},
      USER_NAME = #{record.userName,jdbcType=VARCHAR},
      NAME = #{record.name,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      SEX = #{record.sex,jdbcType=CHAR},
      ID_CARD = #{record.idCard,jdbcType=VARCHAR},
      PARTNER_NAME = #{record.partnerName,jdbcType=VARCHAR},
      PARTNER_TEL = #{record.partnerTel,jdbcType=VARCHAR},
      PARTNER_ADDRESS = #{record.partnerAddress,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.stem.entity.UserApprove" >
    update userapprove
    <set >
      <if test="userName != null" >
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        SEX = #{sex,jdbcType=CHAR},
      </if>
      <if test="idCard != null" >
        ID_CARD = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="partnerName != null" >
        PARTNER_NAME = #{partnerName,jdbcType=VARCHAR},
      </if>
      <if test="partnerTel != null" >
        PARTNER_TEL = #{partnerTel,jdbcType=VARCHAR},
      </if>
      <if test="partnerAddress != null" >
        PARTNER_ADDRESS = #{partnerAddress,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.stem.entity.UserApprove" >
    update userapprove
    set USER_NAME = #{userName,jdbcType=VARCHAR},
      NAME = #{name,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      SEX = #{sex,jdbcType=CHAR},
      ID_CARD = #{idCard,jdbcType=VARCHAR},
      PARTNER_NAME = #{partnerName,jdbcType=VARCHAR},
      PARTNER_TEL = #{partnerTel,jdbcType=VARCHAR},
      PARTNER_ADDRESS = #{partnerAddress,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>